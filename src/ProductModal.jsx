import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const ProductModal = ({ product, isOpen, onClose, onAddToCart, onAddToFavorites, isFavorite }) => {
  const [selectedImage, setSelectedImage] = useState(0);
  const [selectedSize, setSelectedSize] = useState(0);
  const [quantity, setQuantity] = useState(1);

  const productDetails = {
    1: {
      fullDescription: "Hydra Glow Cream ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ —É–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º —Å –≥–∏–∞–ª—É—Ä–æ–Ω–æ–≤–æ–π –∫–∏—Å–ª–æ—Ç–æ–π –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–∫—Å—Ç—Ä–∞–∫—Ç–∞–º–∏. –§–æ—Ä–º—É–ª–∞ –ø—Ä–æ–Ω–∏–∫–∞–µ—Ç –≤ –≥–ª—É–±–æ–∫–∏–µ —Å–ª–æ–∏ –∫–æ–∂–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∞—Ä—å–µ—Ä.",
      ingredients: ["–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–≠–∫—Å—Ç—Ä–∞–∫—Ç –∞–ª–æ—ç –≤–µ—Ä–∞", "–ú–∞—Å–ª–æ —à–∏", "–í–∏—Ç–∞–º–∏–Ω E", "–ù–∏–∞—Ü–∏–Ω–∞–º–∏–¥"],
      benefits: ["–ì–ª—É–±–æ–∫–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ 72 —á–∞—Å–∞", "–£–ª—É—á—à–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –∫–æ–∂–∏", "–°–Ω—è—Ç–∏–µ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏—è", "–ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ—Ç–µ—Ä–∏ –≤–ª–∞–≥–∏"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–∂—É –ª–∏—Ü–∞ –ª–µ–≥–∫–∏–º–∏ –º–∞—Å—Å–∞–∂–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏.",
      size: ["50ml", "100ml", "200ml"],
      images: ["/assets/product1.svg", "/assets/product1.svg", "/assets/product1.svg"]
    },
    2: {
      fullDescription: "Silk Serum ‚Äî –ª–µ–≥–∫–∞—è —à–µ–ª–∫–æ–≤–∏—Å—Ç–∞—è —Å—ã–≤–æ—Ä–æ—Ç–∫–∞ —Å –ø–µ–ø—Ç–∏–¥–∞–º–∏ –∏ –≤–∏—Ç–∞–º–∏–Ω–æ–º C. –£–ª—É—á—à–∞–µ—Ç —ç–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç—å –∫–æ–∂–∏, –±–æ—Ä–µ—Ç—Å—è —Å –ø–µ—Ä–≤—ã–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ —Å—Ç–∞—Ä–µ–Ω–∏—è –∏ –ø—Ä–∏–¥–∞–µ—Ç –∫–æ–∂–µ —Å–∏—è–Ω–∏–µ.",
      ingredients: ["–ü–µ–ø—Ç–∏–¥—ã", "–í–∏—Ç–∞–º–∏–Ω C", "–≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è", "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–ù–∏–∞—Ü–∏–Ω–∞–º–∏–¥"],
      benefits: ["–£–º–µ–Ω—å—à–µ–Ω–∏–µ –º–æ—Ä—â–∏–Ω", "–£–ª—É—á—à–µ–Ω–∏–µ —Ç–æ–Ω—É—Å–∞", "–û—Å–≤–µ—Ç–ª–µ–Ω–∏–µ –ø–∏–≥–º–µ–Ω—Ç–∞—Ü–∏–∏", "–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω–∞—è –∑–∞—â–∏—Ç–∞"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ 2-3 –∫–∞–ø–ª–∏ –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–∂—É –ø–µ—Ä–µ–¥ –∫—Ä–µ–º–æ–º.",
      size: ["30ml", "50ml"],
      images: ["/assets/product2.svg", "/assets/product2.svg", "/assets/product2.svg"]
    },
    3: {
      fullDescription: "Velvet Lip Tint ‚Äî —Å—Ç–æ–π–∫–∏–π —Ç–∏–Ω—Ç –¥–ª—è –≥—É–± —Å –±–∞—Ä—Ö–∞—Ç–∏—Å—Ç–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π. –ù–µ —Å—É—à–∏—Ç –≥—É–±—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –Ω–∞ 8 —á–∞—Å–æ–≤.",
      ingredients: ["–ú–∞—Å–ª–æ –∂–æ–∂–æ–±–∞", "–í–∏—Ç–∞–º–∏–Ω E", "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –ø–∏–≥–º–µ–Ω—Ç—ã", "–≠–∫—Å—Ç—Ä–∞–∫—Ç —Ä–æ–º–∞—à–∫–∏"],
      benefits: ["–°—Ç–æ–π–∫–æ—Å—Ç—å –¥–æ 8 —á–∞—Å–æ–≤", "–£—Ö–æ–¥ –∑–∞ –≥—É–±–∞–º–∏", "–ù–µ–∂–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞", "10 –º–æ–¥–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ –Ω–∞ —á–∏—Å—Ç—ã–µ —Å—É—Ö–∏–µ –≥—É–±—ã, —Ä–∞—Å—Ç—É—à–µ–≤—ã–≤–∞—è –∫–æ–Ω—á–∏–∫–æ–º –ø–∞–ª—å—Ü–∞.",
      size: ["5ml"],
      images: ["/assets/product3.svg", "/assets/product3.svg", "/assets/product3.svg"]
    },
    4: {
      fullDescription: "Radiance Palette ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–∞–ª–µ—Ç–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–∏—è–Ω–∏—è. –í–∫–ª—é—á–∞–µ—Ç —Ö–∞–π–ª–∞–π—Ç–µ—Ä, –±—Ä–æ–Ω–∑–µ—Ä –∏ —Ä—É–º—è–Ω–∞ –ø—Ä–µ–º–∏—É–º-–∫–∞—á–µ—Å—Ç–≤–∞.",
      ingredients: ["–°–ª—é–¥–∞", "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –ø–∏–≥–º–µ–Ω—Ç—ã", "–ú–∞—Å–ª–æ –∞—Ä–≥–∞–Ω—ã", "–í–∏—Ç–∞–º–∏–Ω E"],
      benefits: ["–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å", "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–∏—è–Ω–∏–µ", "–î–æ–ª–≥–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å", "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–æ–Ω–æ–≤ –∫–æ–∂–∏"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ –∫–∏—Å—Ç—å—é –Ω–∞ —Å–∫—É–ª—ã, –ø–µ—Ä–µ–Ω–æ—Å–∏—Ü—É –∏ –¥—Ä—É–≥–∏–µ –∑–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–µ–ª–∏—Ç—å.",
      size: ["12g"],
      images: ["/assets/product4.svg", "/assets/product4.svg", "/assets/product4.svg"]
    },
    5: {
      fullDescription: "–ù–æ—á–Ω–∞—è –º–∞—Å–∫–∞ Lumi√°ra ‚Äî –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–∂–∏ –≤–æ –≤—Ä–µ–º—è —Å–Ω–∞. –§–æ—Ä–º—É–ª–∞ —Å –∫–µ—Ä–∞–º–∏–¥–∞–º–∏ –∏ –ø–µ–ø—Ç–∏–¥–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å—é –Ω–æ—á—å, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∞—Ä—å–µ—Ä –∫–æ–∂–∏.",
      ingredients: ["–ö–µ—Ä–∞–º–∏–¥—ã", "–ü–µ–ø—Ç–∏–¥—ã", "–ù–∏–∞—Ü–∏–Ω–∞–º–∏–¥", "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–≠–∫—Å—Ç—Ä–∞–∫—Ç —Ü–µ–Ω—Ç–µ–ª–ª—ã"],
      benefits: ["–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞—Ä—å–µ—Ä–∞", "–ì–ª—É–±–æ–∫–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ", "–ê–Ω—Ç–∏–≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç", "–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ –≤–µ—á–µ—Ä–æ–º –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–∂—É –≤–º–µ—Å—Ç–æ –Ω–æ—á–Ω–æ–≥–æ –∫—Ä–µ–º–∞.",
      size: ["50ml", "75ml"],
      images: ["/assets/feat1.svg", "/assets/feat1.svg", "/assets/feat1.svg"]
    },
    6: {
      fullDescription: "–î–Ω–µ–≤–Ω–æ–π –∫—Ä–µ–º SPF 30 ‚Äî –ª–µ–≥–∫–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç UV-–ª—É—á–µ–π. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ –∏ –∑–∞—â–∏—Ç—É –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å, –ø—Ä–∏–¥–∞–≤–∞—è –∫–æ–∂–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–∏—è–Ω–∏–µ.",
      ingredients: ["SPF 30", "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–í–∏—Ç–∞–º–∏–Ω E", "–≠–∫—Å—Ç—Ä–∞–∫—Ç –∞–ª–æ—ç –≤–µ—Ä–∞", "–ù–∏–∞—Ü–∏–Ω–∞–º–∏–¥"],
      benefits: ["–ó–∞—â–∏—Ç–∞ –æ—Ç UV-–ª—É—á–µ–π", "–õ–µ–≥–∫–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞", "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–∏—è–Ω–∏–µ", "–£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ 24 —á–∞—Å–∞"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ —É—Ç—Ä–æ–º –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–∂—É –∑–∞ 15 –º–∏–Ω—É—Ç –¥–æ –≤—ã—Ö–æ–¥–∞ –Ω–∞ —Å–æ–ª–Ω—Ü–µ.",
      size: ["50ml"],
      images: ["/assets/feat2.svg", "/assets/feat2.svg", "/assets/feat2.svg"]
    },
    7: {
      fullDescription: "–°—ã–≤–æ—Ä–æ—Ç–∫–∞ Vitamin C ‚Äî –º–æ—â–Ω–∞—è –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ –¥–ª—è —è—Ä–∫–æ—Å—Ç–∏ –∏ —Ç–æ–Ω—É—Å–∞ –∫–æ–∂–∏. –ë–æ—Ä–µ—Ç—Å—è —Å –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏ —Å—Ç–∞—Ä–µ–Ω–∏—è –∏ –æ—Å–≤–µ—Ç–ª—è–µ—Ç –ø–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—é.",
      ingredients: ["–í–∏—Ç–∞–º–∏–Ω C", "–§–µ—Ä—É–ª–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–í–∏—Ç–∞–º–∏–Ω E", "–ì–∏–∞–ª—É—Ä–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞", "–≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è"],
      benefits: ["–û—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Ç–æ–Ω–∞", "–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã", "–£–º–µ–Ω—å—à–µ–Ω–∏–µ –ø–∏–≥–º–µ–Ω—Ç–∞—Ü–∏–∏", "–£–ª—É—á—à–µ–Ω–∏–µ —ç–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç–∏"],
      usage: "–ù–∞–Ω–æ—Å–∏—Ç–µ —É—Ç—Ä–æ–º –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–∂—É –ø–µ—Ä–µ–¥ –∫—Ä–µ–º–æ–º.",
      size: ["30ml"],
      images: ["/assets/feat3.svg", "/assets/feat3.svg", "/assets/feat3.svg"]
    }
  };

  const details = productDetails[product?.id];

  if (!isOpen || !details) return null;

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/60 backdrop-blur-sm"
          onClick={onClose}
        >
          <motion.div
            initial={{ scale: 0.9, opacity: 0, y: 50 }}
            animate={{ scale: 1, opacity: 1, y: 0 }}
            exit={{ scale: 0.9, opacity: 0, y: 50 }}
            className="bg-white rounded-3xl max-w-6xl w-full max-h-[90vh] overflow-y-auto"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="grid lg:grid-cols-2">
              {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
              <div className="bg-gradient-to-br from-cream-50 to-brand-50 p-8">
                <div className="relative h-80 mb-6">
                  <motion.img
                    key={selectedImage}
                    src={details.images[selectedImage]}
                    alt={product.name}
                    className="w-full h-full object-contain"
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ duration: 0.5 }}
                  />
                  
                  <motion.button
                    onClick={() => onAddToFavorites(product)}
                    className="absolute top-4 right-4 w-10 h-10 bg-white/90 rounded-full flex items-center justify-center shadow-lg"
                    whileHover={{ scale: 1.1 }}
                    whileTap={{ scale: 0.9 }}
                  >
                    <motion.span
                      animate={{ scale: isFavorite ? 1.2 : 1 }}
                      transition={{ type: "spring", stiffness: 300 }}
                    >
                      {isFavorite ? "‚ù§Ô∏è" : "ü§ç"}
                    </motion.span>
                  </motion.button>
                </div>

                <div className="flex gap-4 justify-center">
                  {details.images.map((img, index) => (
                    <motion.button
                      key={index}
                      onClick={() => setSelectedImage(index)}
                      className={`w-16 h-16 rounded-xl border-2 overflow-hidden ${
                        selectedImage === index ? 'border-brand-600' : 'border-gray-300'
                      }`}
                      whileHover={{ scale: 1.1 }}
                      whileTap={{ scale: 0.95 }}
                    >
                      <img src={img} alt="" className="w-full h-full object-cover" />
                    </motion.button>
                  ))}
                </div>
              </div>

              {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="p-8">
                <button
                  onClick={onClose}
                  className="float-right text-gray-500 hover:text-gray-700 text-2xl mb-4"
                >
                  ‚úï
                </button>

                <div className="clear-both">
                  <h2 className="font-serif text-3xl font-bold text-gray-900 mb-2">
                    {product.name}
                  </h2>
                  <p className="text-2xl font-serif font-semibold text-brand-600 mb-6">
                    {product.price}
                  </p>

                  <div className="space-y-6">
                    <div>
                      <h3 className="font-semibold text-lg mb-3 text-gray-900">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                      <p className="text-gray-600 leading-relaxed">{details.fullDescription}</p>
                    </div>

                    <div>
                      <h3 className="font-semibold text-lg mb-3 text-gray-900">–ê–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
                      <div className="flex flex-wrap gap-2">
                        {details.ingredients.map((ingredient, index) => (
                          <motion.span
                            key={index}
                            className="px-3 py-1 bg-brand-50 text-brand-700 rounded-full text-sm"
                            whileHover={{ scale: 1.05 }}
                          >
                            {ingredient}
                          </motion.span>
                        ))}
                      </div>
                    </div>

                    <div>
                      <h3 className="font-semibold text-lg mb-3 text-gray-900">–≠—Ñ—Ñ–µ–∫—Ç</h3>
                      <ul className="space-y-2">
                        {details.benefits.map((benefit, index) => (
                          <motion.li 
                            key={index}
                            className="flex items-center text-gray-600"
                            initial={{ opacity: 0, x: -20 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: index * 0.1 }}
                          >
                            <span className="w-2 h-2 bg-brand-600 rounded-full mr-3"></span>
                            {benefit}
                          </motion.li>
                        ))}
                      </ul>
                    </div>

                    <div>
                      <h3 className="font-semibold text-lg mb-3 text-gray-900">–†–∞–∑–º–µ—Ä</h3>
                      <div className="flex gap-3">
                        {details.size.map((size, index) => (
                          <motion.button
                            key={size}
                            onClick={() => setSelectedSize(index)}
                            className={`px-4 py-2 rounded-lg border-2 transition-all ${
                              selectedSize === index
                                ? 'border-brand-600 bg-brand-50 text-brand-700'
                                : 'border-gray-300 text-gray-600 hover:border-gray-400'
                            }`}
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}
                          >
                            {size}
                          </motion.button>
                        ))}
                      </div>
                    </div>

                    {/* –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ï–ö–¶–ò–Ø –ö–û–õ–ò–ß–ï–°–¢–í–ê */}
                    <div className="bg-gray-50 rounded-xl p-6">
                      <h3 className="font-semibold text-lg mb-4 text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–∞–∑</h3>
                      <div className="flex items-center justify-between">
                        <div>
                          <div className="text-sm text-gray-600 mb-2">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</div>
                          <div className="flex items-center gap-4">
                            <motion.button
                              onClick={() => setQuantity(Math.max(1, quantity - 1))}
                              className="w-10 h-10 rounded-full border-2 border-gray-300 flex items-center justify-center text-gray-600"
                              whileHover={{ scale: 1.1, backgroundColor: "#f3f4f6" }}
                              whileTap={{ scale: 0.9 }}
                            >
                              -
                            </motion.button>
                            <span className="text-lg font-semibold w-8 text-center">{quantity}</span>
                            <motion.button
                              onClick={() => setQuantity(quantity + 1)}
                              className="w-10 h-10 rounded-full border-2 border-gray-300 flex items-center justify-center text-gray-600"
                              whileHover={{ scale: 1.1, backgroundColor: "#f3f4f6" }}
                              whileTap={{ scale: 0.9 }}
                            >
                              +
                            </motion.button>
                          </div>
                        </div>
                        
                        <motion.button
                          onClick={() => {
                            onAddToCart({ ...product, quantity });
                            onClose();
                          }}
                          className="px-8 py-3 bg-gradient-to-r from-brand-600 to-brand-700 text-white rounded-xl font-semibold text-lg shadow-lg"
                          whileHover={{ scale: 1.02, y: -2 }}
                          whileTap={{ scale: 0.98 }}
                        >
                          –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                        </motion.button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
};

export default ProductModal;